// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sobel_filter_HH_
#define _sobel_filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sobel_filter_mux_fYi.h"
#include "sobel_filter_linebkb.h"
#include "sobel_filter_lineeOg.h"
#include "sobel_filter_AXILiteS_s_axi.h"
#include "sobel_filter_gmem_m_axi.h"
#include "sobel_filter_gmem2_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM2_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM2_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM2_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct sobel_filter : public sc_module {
    // Port declarations 110
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_out< sc_logic > m_axi_gmem2_AWVALID;
    sc_in< sc_logic > m_axi_gmem2_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM2_ADDR_WIDTH> > m_axi_gmem2_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_AWID;
    sc_out< sc_lv<8> > m_axi_gmem2_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem2_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem2_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem2_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem2_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem2_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem2_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem2_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM2_AWUSER_WIDTH> > m_axi_gmem2_AWUSER;
    sc_out< sc_logic > m_axi_gmem2_WVALID;
    sc_in< sc_logic > m_axi_gmem2_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM2_DATA_WIDTH> > m_axi_gmem2_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM2_DATA_WIDTH/8> > m_axi_gmem2_WSTRB;
    sc_out< sc_logic > m_axi_gmem2_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_WID;
    sc_out< sc_uint<C_M_AXI_GMEM2_WUSER_WIDTH> > m_axi_gmem2_WUSER;
    sc_out< sc_logic > m_axi_gmem2_ARVALID;
    sc_in< sc_logic > m_axi_gmem2_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM2_ADDR_WIDTH> > m_axi_gmem2_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_ARID;
    sc_out< sc_lv<8> > m_axi_gmem2_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem2_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem2_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem2_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem2_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem2_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem2_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem2_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM2_ARUSER_WIDTH> > m_axi_gmem2_ARUSER;
    sc_in< sc_logic > m_axi_gmem2_RVALID;
    sc_out< sc_logic > m_axi_gmem2_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM2_DATA_WIDTH> > m_axi_gmem2_RDATA;
    sc_in< sc_logic > m_axi_gmem2_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_RID;
    sc_in< sc_uint<C_M_AXI_GMEM2_RUSER_WIDTH> > m_axi_gmem2_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem2_RRESP;
    sc_in< sc_logic > m_axi_gmem2_BVALID;
    sc_out< sc_logic > m_axi_gmem2_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem2_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM2_ID_WIDTH> > m_axi_gmem2_BID;
    sc_in< sc_uint<C_M_AXI_GMEM2_BUSER_WIDTH> > m_axi_gmem2_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const8;


    // Module declarations
    sobel_filter(sc_module_name name);
    SC_HAS_PROCESS(sobel_filter);

    ~sobel_filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sobel_filter_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* sobel_filter_AXILiteS_s_axi_U;
    sobel_filter_gmem_m_axi<8,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* sobel_filter_gmem_m_axi_U;
    sobel_filter_gmem2_m_axi<32,32,5,16,16,16,16,C_M_AXI_GMEM2_ID_WIDTH,C_M_AXI_GMEM2_ADDR_WIDTH,C_M_AXI_GMEM2_DATA_WIDTH,C_M_AXI_GMEM2_AWUSER_WIDTH,C_M_AXI_GMEM2_ARUSER_WIDTH,C_M_AXI_GMEM2_WUSER_WIDTH,C_M_AXI_GMEM2_RUSER_WIDTH,C_M_AXI_GMEM2_BUSER_WIDTH,C_M_AXI_GMEM2_USER_VALUE,C_M_AXI_GMEM2_PROT_VALUE,C_M_AXI_GMEM2_CACHE_VALUE>* sobel_filter_gmem2_m_axi_U;
    sobel_filter_linebkb* lineBuffer_0_U;
    sobel_filter_linebkb* lineBuffer_1_U;
    sobel_filter_linebkb* lineBuffer_2_U;
    sobel_filter_lineeOg* lineBuffer_3_U;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U1;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U2;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U3;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U4;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U5;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U6;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U7;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U8;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<26> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > inter_pix;
    sc_signal< sc_lv<32> > out_pix;
    sc_signal< sc_logic > gmem_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > gmem_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > tmp_3_fu_476_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > tmp_11_reg_1175;
    sc_signal< sc_logic > gmem2_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > gmem2_blk_n_W;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > gmem2_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_logic > gmem_ARVALID;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_lv<32> > gmem_ARADDR;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_logic > gmem_RREADY;
    sc_signal< sc_lv<8> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_logic > gmem2_AWVALID;
    sc_signal< sc_logic > gmem2_AWREADY;
    sc_signal< sc_lv<32> > gmem2_AWADDR;
    sc_signal< sc_logic > gmem2_WVALID;
    sc_signal< sc_logic > gmem2_WREADY;
    sc_signal< sc_lv<32> > gmem2_WDATA;
    sc_signal< sc_logic > gmem2_ARREADY;
    sc_signal< sc_logic > gmem2_RVALID;
    sc_signal< sc_lv<32> > gmem2_RDATA;
    sc_signal< sc_logic > gmem2_RLAST;
    sc_signal< sc_lv<1> > gmem2_RID;
    sc_signal< sc_lv<1> > gmem2_RUSER;
    sc_signal< sc_lv<2> > gmem2_RRESP;
    sc_signal< sc_logic > gmem2_BVALID;
    sc_signal< sc_logic > gmem2_BREADY;
    sc_signal< sc_lv<2> > gmem2_BRESP;
    sc_signal< sc_lv<1> > gmem2_BID;
    sc_signal< sc_lv<1> > gmem2_BUSER;
    sc_signal< sc_lv<11> > row_assign_reg_386;
    sc_signal< sc_lv<32> > tmp_1_cast_fu_407_p1;
    sc_signal< sc_lv<32> > tmp_1_cast_reg_1059;
    sc_signal< sc_lv<33> > tmp_6_cast_fu_411_p1;
    sc_signal< sc_lv<33> > tmp_6_cast_reg_1064;
    sc_signal< sc_lv<2> > tmp_s_fu_421_p2;
    sc_signal< sc_lv<2> > tmp_s_reg_1073;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > gmem_addr_reg_1078;
    sc_signal< sc_lv<1> > tmp_fu_415_p2;
    sc_signal< sc_lv<11> > i_1_fu_482_p2;
    sc_signal< sc_lv<11> > i_1_reg_1087;
    sc_signal< bool > ap_block_state10;
    sc_signal< sc_lv<8> > gmem_addr_read_reg_1092;
    sc_signal< sc_lv<11> > lineBuffer_0_addr_reg_1099;
    sc_signal< sc_lv<11> > lineBuffer_1_addr_reg_1104;
    sc_signal< sc_lv<11> > lineBuffer_2_addr_reg_1109;
    sc_signal< sc_lv<11> > i_2_fu_501_p2;
    sc_signal< sc_lv<11> > i_2_reg_1117;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<2> > tmp_48_fu_579_p1;
    sc_signal< sc_lv<2> > tmp_48_reg_1122;
    sc_signal< sc_lv<1> > tmp_2_fu_495_p2;
    sc_signal< sc_lv<1> > tmp1_fu_583_p2;
    sc_signal< sc_lv<1> > tmp1_reg_1130;
    sc_signal< sc_lv<32> > tmp_50_fu_593_p2;
    sc_signal< sc_lv<32> > tmp_50_reg_1135;
    sc_signal< sc_lv<32> > gmem_addr_1_reg_1140;
    sc_signal< sc_lv<2> > tmp_47_fu_617_p1;
    sc_signal< sc_lv<2> > tmp_47_reg_1146;
    sc_signal< sc_logic > ap_sig_ioackin_gmem2_AWREADY;
    sc_signal< sc_lv<2> > tmp_24_0_t_fu_621_p2;
    sc_signal< sc_lv<2> > tmp_24_0_t_reg_1150;
    sc_signal< sc_lv<2> > tmp_24_2_t_fu_626_p2;
    sc_signal< sc_lv<2> > tmp_24_2_t_reg_1157;
    sc_signal< sc_lv<12> > row_assign_cast_fu_641_p1;
    sc_signal< sc_lv<12> > row_assign_cast_reg_1170;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > tmp_11_fu_645_p2;
    sc_signal< sc_lv<11> > j_fu_651_p2;
    sc_signal< sc_lv<11> > j_reg_1179;
    sc_signal< sc_lv<1> > or_cond2_fu_675_p2;
    sc_signal< sc_lv<1> > or_cond2_reg_1185;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_or_cond2_reg_1185;
    sc_signal< sc_lv<11> > lineBuffer_0_addr_2_reg_1191;
    sc_signal< sc_lv<11> > lineBuffer_1_addr_2_reg_1197;
    sc_signal< sc_lv<11> > lineBuffer_2_addr_2_reg_1203;
    sc_signal< sc_lv<11> > lineBuffer_3_addr_1_reg_1209;
    sc_signal< bool > ap_block_state21_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state23_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state25_pp0_stage1_iter2;
    sc_signal< sc_logic > ap_sig_ioackin_gmem2_WREADY;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<8> > tmp_23_fu_705_p6;
    sc_signal< sc_lv<8> > tmp_23_reg_1235;
    sc_signal< sc_lv<8> > tmp_29_fu_725_p6;
    sc_signal< sc_lv<8> > tmp_29_reg_1260;
    sc_signal< sc_lv<8> > gmem_addr_1_read_reg_1265;
    sc_signal< sc_lv<8> > lineBuffer_0_q0;
    sc_signal< sc_lv<8> > lineBuffer_0_load_2_reg_1273;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<8> > lineBuffer_1_q0;
    sc_signal< sc_lv<8> > lineBuffer_1_load_2_reg_1279;
    sc_signal< sc_lv<8> > lineBuffer_2_q0;
    sc_signal< sc_lv<8> > lineBuffer_2_load_2_reg_1285;
    sc_signal< sc_lv<8> > lineBuffer_3_q1;
    sc_signal< sc_lv<8> > lineBuffer_3_load_2_reg_1291;
    sc_signal< sc_lv<9> > x_weight_0_2_fu_772_p2;
    sc_signal< sc_lv<9> > x_weight_0_2_reg_1297;
    sc_signal< sc_lv<8> > tmp_25_fu_778_p6;
    sc_signal< sc_lv<8> > tmp_25_reg_1302;
    sc_signal< sc_lv<9> > tmp3_fu_791_p2;
    sc_signal< sc_lv<9> > tmp3_reg_1307;
    sc_signal< sc_lv<8> > tmp_28_fu_797_p6;
    sc_signal< sc_lv<8> > tmp_28_reg_1312;
    sc_signal< sc_lv<11> > x_weight_2_2_fu_930_p2;
    sc_signal< sc_lv<11> > x_weight_2_2_reg_1317;
    sc_signal< sc_lv<11> > y_weight_2_2_fu_936_p2;
    sc_signal< sc_lv<11> > y_weight_2_2_reg_1322;
    sc_signal< sc_lv<8> > tmp_31_fu_942_p2;
    sc_signal< sc_lv<8> > tmp_31_reg_1327;
    sc_signal< sc_lv<8> > tmp_56_fu_948_p1;
    sc_signal< sc_lv<8> > tmp_56_reg_1333;
    sc_signal< sc_lv<8> > val_fu_1036_p3;
    sc_signal< sc_lv<8> > val_reg_1339;
    sc_signal< sc_lv<11> > lastLine_2_fu_1053_p2;
    sc_signal< sc_lv<11> > lastLine_2_reg_1347;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state20;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<11> > lineBuffer_0_address0;
    sc_signal< sc_logic > lineBuffer_0_ce0;
    sc_signal< sc_logic > lineBuffer_0_we0;
    sc_signal< sc_lv<11> > lineBuffer_0_address1;
    sc_signal< sc_logic > lineBuffer_0_ce1;
    sc_signal< sc_logic > lineBuffer_0_we1;
    sc_signal< sc_lv<8> > lineBuffer_0_q1;
    sc_signal< sc_lv<11> > lineBuffer_1_address0;
    sc_signal< sc_logic > lineBuffer_1_ce0;
    sc_signal< sc_logic > lineBuffer_1_we0;
    sc_signal< sc_lv<11> > lineBuffer_1_address1;
    sc_signal< sc_logic > lineBuffer_1_ce1;
    sc_signal< sc_logic > lineBuffer_1_we1;
    sc_signal< sc_lv<8> > lineBuffer_1_q1;
    sc_signal< sc_lv<11> > lineBuffer_2_address0;
    sc_signal< sc_logic > lineBuffer_2_ce0;
    sc_signal< sc_logic > lineBuffer_2_we0;
    sc_signal< sc_lv<11> > lineBuffer_2_address1;
    sc_signal< sc_logic > lineBuffer_2_ce1;
    sc_signal< sc_logic > lineBuffer_2_we1;
    sc_signal< sc_lv<8> > lineBuffer_2_q1;
    sc_signal< sc_lv<11> > lineBuffer_3_address0;
    sc_signal< sc_logic > lineBuffer_3_ce0;
    sc_signal< sc_lv<8> > lineBuffer_3_q0;
    sc_signal< sc_lv<11> > lineBuffer_3_address1;
    sc_signal< sc_logic > lineBuffer_3_ce1;
    sc_signal< sc_logic > lineBuffer_3_we1;
    sc_signal< sc_lv<2> > lastLine_reg_340;
    sc_signal< sc_lv<11> > i_reg_352;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<11> > lastLine_1_reg_363;
    sc_signal< sc_lv<11> > i1_reg_375;
    sc_signal< sc_lv<11> > ap_phi_mux_row_assign_phi_fu_390_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > tmp_10_fu_488_p1;
    sc_signal< sc_lv<64> > tmp_31_0_1_fu_680_p1;
    sc_signal< sc_lv<64> > tmp_19_fu_697_p1;
    sc_signal< sc_lv<64> > tmp_31_0_2_fu_718_p1;
    sc_signal< sc_lv<64> > tmp_39_fu_466_p1;
    sc_signal< sc_lv<64> > tmp_54_fu_607_p1;
    sc_signal< sc_lv<64> > tmp_51_fu_631_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem2_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem2_WREADY;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< sc_lv<30> > tmp_1_fu_397_p4;
    sc_signal< sc_lv<13> > tmp_7_fu_427_p3;
    sc_signal< sc_lv<9> > tmp_6_fu_439_p3;
    sc_signal< sc_lv<14> > p_shl5_cast_fu_435_p1;
    sc_signal< sc_lv<14> > p_shl6_cast_fu_447_p1;
    sc_signal< sc_lv<14> > tmp_16_fu_451_p2;
    sc_signal< sc_lv<33> > tmp_30_fu_457_p1;
    sc_signal< sc_lv<33> > tmp_34_fu_461_p2;
    sc_signal< sc_lv<22> > tmp_40_fu_519_p3;
    sc_signal< sc_lv<18> > tmp_41_fu_531_p3;
    sc_signal< sc_lv<23> > p_shl9_cast_fu_527_p1;
    sc_signal< sc_lv<23> > p_shl2_cast_fu_539_p1;
    sc_signal< sc_lv<22> > tmp_44_fu_549_p3;
    sc_signal< sc_lv<18> > tmp_45_fu_561_p3;
    sc_signal< sc_lv<23> > p_shl7_cast_fu_557_p1;
    sc_signal< sc_lv<23> > p_shl8_cast_fu_569_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_507_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_513_p2;
    sc_signal< sc_lv<23> > tmp_43_fu_543_p2;
    sc_signal< sc_lv<32> > tmp_49_fu_589_p1;
    sc_signal< sc_lv<23> > tmp_46_fu_573_p2;
    sc_signal< sc_lv<33> > tmp_52_fu_598_p1;
    sc_signal< sc_lv<33> > tmp_53_fu_602_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_657_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_663_p2;
    sc_signal< sc_lv<1> > tmp2_fu_669_p2;
    sc_signal< sc_lv<12> > tmp_18_fu_688_p2;
    sc_signal< sc_lv<32> > tmp_301_cast_fu_693_p1;
    sc_signal< sc_lv<8> > tmp_22_fu_738_p6;
    sc_signal< sc_lv<8> > tmp_24_fu_755_p6;
    sc_signal< sc_lv<9> > tmp_32_0_2_cast_fu_768_p1;
    sc_signal< sc_lv<9> > tmp_321_cast_fu_751_p1;
    sc_signal< sc_lv<9> > tmp_37_0_1_fu_810_p3;
    sc_signal< sc_lv<9> > p_shl1_fu_824_p3;
    sc_signal< sc_lv<11> > x_weight_0_2_cast_fu_821_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_831_p1;
    sc_signal< sc_lv<8> > tmp_26_fu_841_p6;
    sc_signal< sc_lv<9> > tmp_35_1_2_fu_850_p3;
    sc_signal< sc_lv<11> > x_weight_1_1_fu_835_p2;
    sc_signal< sc_lv<11> > tmp_35_1_2_cast_fu_858_p1;
    sc_signal< sc_lv<10> > tmp_37_0_1_cast_fu_817_p1;
    sc_signal< sc_lv<10> > tmp3_cast_fu_868_p1;
    sc_signal< sc_lv<10> > y_weight_1_2_fu_871_p2;
    sc_signal< sc_lv<11> > x_weight_1_2_fu_862_p2;
    sc_signal< sc_lv<11> > tmp_32_2_cast_fu_881_p1;
    sc_signal< sc_lv<11> > y_weight_1_2_cast_fu_877_p1;
    sc_signal< sc_lv<9> > p_shl_fu_896_p3;
    sc_signal< sc_lv<11> > y_weight_2_fu_890_p2;
    sc_signal< sc_lv<11> > p_shl_cast_fu_903_p1;
    sc_signal< sc_lv<8> > tmp_37_fu_913_p6;
    sc_signal< sc_lv<11> > x_weight_2_fu_884_p2;
    sc_signal< sc_lv<11> > tmp_32_2_2_cast_fu_922_p1;
    sc_signal< sc_lv<11> > y_weight_2_1_fu_907_p2;
    sc_signal< sc_lv<8> > tmp_55_fu_926_p1;
    sc_signal< sc_lv<1> > tmp_14_fu_952_p2;
    sc_signal< sc_lv<8> > tmp_32_fu_957_p2;
    sc_signal< sc_lv<1> > tmp_17_fu_969_p2;
    sc_signal< sc_lv<8> > tmp_35_fu_974_p2;
    sc_signal< sc_lv<8> > tmp_36_fu_979_p3;
    sc_signal< sc_lv<8> > tmp_33_fu_962_p3;
    sc_signal< sc_lv<8> > tmp_20_fu_986_p2;
    sc_signal< sc_lv<1> > tmp_27_fu_1004_p2;
    sc_signal< sc_lv<8> > edge_val_fu_992_p2;
    sc_signal< sc_lv<1> > not_or_cond2_fu_1018_p2;
    sc_signal< sc_lv<1> > tmp_21_fu_998_p2;
    sc_signal< sc_lv<1> > tmp_38_fu_1031_p2;
    sc_signal< sc_lv<8> > edge_val_1_i_cast_fu_1023_p3;
    sc_signal< sc_lv<8> > p_i_fu_1010_p3;
    sc_signal< sc_lv<26> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<26> ap_ST_fsm_state1;
    static const sc_lv<26> ap_ST_fsm_state2;
    static const sc_lv<26> ap_ST_fsm_state3;
    static const sc_lv<26> ap_ST_fsm_state4;
    static const sc_lv<26> ap_ST_fsm_state5;
    static const sc_lv<26> ap_ST_fsm_state6;
    static const sc_lv<26> ap_ST_fsm_state7;
    static const sc_lv<26> ap_ST_fsm_state8;
    static const sc_lv<26> ap_ST_fsm_state9;
    static const sc_lv<26> ap_ST_fsm_state10;
    static const sc_lv<26> ap_ST_fsm_state11;
    static const sc_lv<26> ap_ST_fsm_state12;
    static const sc_lv<26> ap_ST_fsm_state13;
    static const sc_lv<26> ap_ST_fsm_state14;
    static const sc_lv<26> ap_ST_fsm_state15;
    static const sc_lv<26> ap_ST_fsm_state16;
    static const sc_lv<26> ap_ST_fsm_state17;
    static const sc_lv<26> ap_ST_fsm_state18;
    static const sc_lv<26> ap_ST_fsm_state19;
    static const sc_lv<26> ap_ST_fsm_pp0_stage0;
    static const sc_lv<26> ap_ST_fsm_pp0_stage1;
    static const sc_lv<26> ap_ST_fsm_state26;
    static const sc_lv<26> ap_ST_fsm_state27;
    static const sc_lv<26> ap_ST_fsm_state28;
    static const sc_lv<26> ap_ST_fsm_state29;
    static const sc_lv<26> ap_ST_fsm_state30;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_14;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_19;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM2_USER_VALUE;
    static const int C_M_AXI_GMEM2_PROT_VALUE;
    static const int C_M_AXI_GMEM2_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<11> ap_const_lv11_3;
    static const sc_lv<32> ap_const_lv32_780;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<11> ap_const_lv11_780;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_438;
    static const sc_lv<11> ap_const_lv11_437;
    static const sc_lv<11> ap_const_lv11_77F;
    static const sc_lv<12> ap_const_lv12_FFF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_37;
    static const sc_lv<8> ap_const_lv8_9B;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state10();
    void thread_ap_block_state20_pp0_stage0_iter0();
    void thread_ap_block_state21_pp0_stage1_iter0();
    void thread_ap_block_state22_pp0_stage0_iter1();
    void thread_ap_block_state23_pp0_stage1_iter1();
    void thread_ap_block_state24_pp0_stage0_iter2();
    void thread_ap_block_state25_pp0_stage1_iter2();
    void thread_ap_condition_pp0_exit_iter0_state20();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_row_assign_phi_fu_390_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_gmem2_AWREADY();
    void thread_ap_sig_ioackin_gmem2_WREADY();
    void thread_ap_sig_ioackin_gmem_ARREADY();
    void thread_edge_val_1_i_cast_fu_1023_p3();
    void thread_edge_val_fu_992_p2();
    void thread_gmem2_AWADDR();
    void thread_gmem2_AWVALID();
    void thread_gmem2_BREADY();
    void thread_gmem2_WDATA();
    void thread_gmem2_WVALID();
    void thread_gmem2_blk_n_AW();
    void thread_gmem2_blk_n_B();
    void thread_gmem2_blk_n_W();
    void thread_gmem_ARADDR();
    void thread_gmem_ARVALID();
    void thread_gmem_RREADY();
    void thread_gmem_blk_n_AR();
    void thread_gmem_blk_n_R();
    void thread_i_1_fu_482_p2();
    void thread_i_2_fu_501_p2();
    void thread_j_fu_651_p2();
    void thread_lastLine_2_fu_1053_p2();
    void thread_lineBuffer_0_address0();
    void thread_lineBuffer_0_address1();
    void thread_lineBuffer_0_ce0();
    void thread_lineBuffer_0_ce1();
    void thread_lineBuffer_0_we0();
    void thread_lineBuffer_0_we1();
    void thread_lineBuffer_1_address0();
    void thread_lineBuffer_1_address1();
    void thread_lineBuffer_1_ce0();
    void thread_lineBuffer_1_ce1();
    void thread_lineBuffer_1_we0();
    void thread_lineBuffer_1_we1();
    void thread_lineBuffer_2_address0();
    void thread_lineBuffer_2_address1();
    void thread_lineBuffer_2_ce0();
    void thread_lineBuffer_2_ce1();
    void thread_lineBuffer_2_we0();
    void thread_lineBuffer_2_we1();
    void thread_lineBuffer_3_address0();
    void thread_lineBuffer_3_address1();
    void thread_lineBuffer_3_ce0();
    void thread_lineBuffer_3_ce1();
    void thread_lineBuffer_3_we1();
    void thread_not_or_cond2_fu_1018_p2();
    void thread_or_cond2_fu_675_p2();
    void thread_p_i_fu_1010_p3();
    void thread_p_shl1_cast_fu_831_p1();
    void thread_p_shl1_fu_824_p3();
    void thread_p_shl2_cast_fu_539_p1();
    void thread_p_shl5_cast_fu_435_p1();
    void thread_p_shl6_cast_fu_447_p1();
    void thread_p_shl7_cast_fu_557_p1();
    void thread_p_shl8_cast_fu_569_p1();
    void thread_p_shl9_cast_fu_527_p1();
    void thread_p_shl_cast_fu_903_p1();
    void thread_p_shl_fu_896_p3();
    void thread_row_assign_cast_fu_641_p1();
    void thread_tmp1_fu_583_p2();
    void thread_tmp2_fu_669_p2();
    void thread_tmp3_cast_fu_868_p1();
    void thread_tmp3_fu_791_p2();
    void thread_tmp_10_fu_488_p1();
    void thread_tmp_11_fu_645_p2();
    void thread_tmp_12_fu_657_p2();
    void thread_tmp_13_fu_663_p2();
    void thread_tmp_14_fu_952_p2();
    void thread_tmp_16_fu_451_p2();
    void thread_tmp_17_fu_969_p2();
    void thread_tmp_18_fu_688_p2();
    void thread_tmp_19_fu_697_p1();
    void thread_tmp_1_cast_fu_407_p1();
    void thread_tmp_1_fu_397_p4();
    void thread_tmp_20_fu_986_p2();
    void thread_tmp_21_fu_998_p2();
    void thread_tmp_24_0_t_fu_621_p2();
    void thread_tmp_24_2_t_fu_626_p2();
    void thread_tmp_27_fu_1004_p2();
    void thread_tmp_2_fu_495_p2();
    void thread_tmp_301_cast_fu_693_p1();
    void thread_tmp_30_fu_457_p1();
    void thread_tmp_31_0_1_fu_680_p1();
    void thread_tmp_31_0_2_fu_718_p1();
    void thread_tmp_31_fu_942_p2();
    void thread_tmp_321_cast_fu_751_p1();
    void thread_tmp_32_0_2_cast_fu_768_p1();
    void thread_tmp_32_2_2_cast_fu_922_p1();
    void thread_tmp_32_2_cast_fu_881_p1();
    void thread_tmp_32_fu_957_p2();
    void thread_tmp_33_fu_962_p3();
    void thread_tmp_34_fu_461_p2();
    void thread_tmp_35_1_2_cast_fu_858_p1();
    void thread_tmp_35_1_2_fu_850_p3();
    void thread_tmp_35_fu_974_p2();
    void thread_tmp_36_fu_979_p3();
    void thread_tmp_37_0_1_cast_fu_817_p1();
    void thread_tmp_37_0_1_fu_810_p3();
    void thread_tmp_38_fu_1031_p2();
    void thread_tmp_39_fu_466_p1();
    void thread_tmp_3_fu_476_p2();
    void thread_tmp_40_fu_519_p3();
    void thread_tmp_41_fu_531_p3();
    void thread_tmp_43_fu_543_p2();
    void thread_tmp_44_fu_549_p3();
    void thread_tmp_45_fu_561_p3();
    void thread_tmp_46_fu_573_p2();
    void thread_tmp_47_fu_617_p1();
    void thread_tmp_48_fu_579_p1();
    void thread_tmp_49_fu_589_p1();
    void thread_tmp_4_fu_507_p2();
    void thread_tmp_50_fu_593_p2();
    void thread_tmp_51_fu_631_p1();
    void thread_tmp_52_fu_598_p1();
    void thread_tmp_53_fu_602_p2();
    void thread_tmp_54_fu_607_p1();
    void thread_tmp_55_fu_926_p1();
    void thread_tmp_56_fu_948_p1();
    void thread_tmp_5_fu_513_p2();
    void thread_tmp_6_cast_fu_411_p1();
    void thread_tmp_6_fu_439_p3();
    void thread_tmp_7_fu_427_p3();
    void thread_tmp_fu_415_p2();
    void thread_tmp_s_fu_421_p2();
    void thread_val_fu_1036_p3();
    void thread_x_weight_0_2_cast_fu_821_p1();
    void thread_x_weight_0_2_fu_772_p2();
    void thread_x_weight_1_1_fu_835_p2();
    void thread_x_weight_1_2_fu_862_p2();
    void thread_x_weight_2_2_fu_930_p2();
    void thread_x_weight_2_fu_884_p2();
    void thread_y_weight_1_2_cast_fu_877_p1();
    void thread_y_weight_1_2_fu_871_p2();
    void thread_y_weight_2_1_fu_907_p2();
    void thread_y_weight_2_2_fu_936_p2();
    void thread_y_weight_2_fu_890_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
